{"version":3,"sources":["components/CourseGoals/CourseGoalItem/CourseGoalItem.tsx","components/CourseGoals/CourseGoalList/CourseGoalList.tsx","components/UI/Button/Button.tsx","components/CourseGoals/CourseInput/CourseInput.tsx","App.tsx","index.tsx"],"names":["CourseGoalItem","props","className","onClick","onDelete","id","children","CourseGoalList","items","map","goal","onDeleteItem","text","Button","type","CourseInput","useState","enteredValue","setEnteredValue","isValid","setIsValid","onSubmit","event","preventDefault","trim","length","onAddGoal","onChange","target","value","App","courseGoals","setCourseGoals","content","style","textAlign","goalId","prevGoals","filter","enteredText","updatedGoals","unshift","Math","random","toString","ReactDOM","render","document","getElementById"],"mappings":"4TAwBeA,EAfuC,SAACC,GAQrD,OACE,oBAAIC,UAAU,YAAYC,QANN,WAEpBF,EAAMG,SAASH,EAAMI,KAIrB,SACGJ,EAAMK,YCUEC,G,MAhBuC,SAACN,GACrD,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAMO,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEL,GAAIK,EAAKL,GACTD,SAAUH,EAAMU,aAHlB,SAKGD,EAAKE,MAJDF,EAAKL,WCFLQ,G,MARuB,SAACZ,GACrC,OACE,wBAAQa,KAAMb,EAAMa,KAAMZ,UAAU,SAASC,QAASF,EAAME,QAA5D,SACGF,EAAMK,aCgCES,G,MAnCiC,SAACd,GAC/C,MAAwCe,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAsBA,OACE,uBAAMC,SAZ2D,SACjEC,GAEAA,EAAMC,iBAC6B,IAA/BN,EAAaO,OAAOC,OAIxBxB,EAAMyB,UAAUT,GAHdG,GAAW,IAOb,UACE,sBAAKlB,UAAS,uBAAkBiB,EAAU,GAAK,WAA/C,UACE,gDACA,uBAAOL,KAAK,OAAOa,SAxBkD,SACzEL,GAEIA,EAAMM,OAAOC,MAAML,OAAOC,OAAS,GACrCL,GAAW,GAEbF,EAAgBI,EAAMM,OAAOC,aAoB3B,cAAC,EAAD,CAAQf,KAAK,SAAb,2BCkBSgB,EAnDO,WACpB,MAAsCd,mBAAS,CAC7C,CAAEJ,KAAM,+BAAgCP,GAAI,MAC5C,CAAEO,KAAM,qBAAsBP,GAAI,MAClC,CAAEO,KAAM,oBAAqBP,GAAI,QAHnC,mBAAO0B,EAAP,KAAoBC,EAApB,KAqBIC,EACF,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,4CASF,OANIJ,EAAYN,OAAS,IACvBQ,EACE,cAAC,EAAD,CAAgBzB,MAAOuB,EAAapB,aAbd,SAACyB,GACzBJ,GAAe,SAACK,GAEd,OADqBA,EAAUC,QAAO,SAAC5B,GAAD,OAAUA,EAAKL,KAAO+B,YAgB9D,gCACE,yBAAS/B,GAAG,YAAZ,SACE,cAAC,EAAD,CAAaqB,UA5BI,SAACa,GACtBP,GAAe,SAACK,GACd,IAAMG,EAAY,YAAOH,GAEzB,OADAG,EAAaC,QAAQ,CAAE7B,KAAM2B,EAAalC,GAAIqC,KAAKC,SAASC,aACrDJ,UA0BP,yBAASnC,GAAG,QAAZ,SACG4B,QCrCTY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f8cef356.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./CourseGoalItem.css\";\n\ninterface CourseGoalItemProps {\n  id: string;\n  onDelete: (id: string) => void;\n}\n\nconst CourseGoalItem: React.FC<CourseGoalItemProps> = (props) => {\n  // const [deleteText, setDeleteText] = useState('');\n\n  const deleteHandler = () => {\n    // setDeleteText('(Deleted!)');\n    props.onDelete(props.id);\n  };\n\n  return (\n    <li className=\"goal-item\" onClick={deleteHandler}>\n      {props.children}\n    </li>\n  );\n};\n\nexport default CourseGoalItem;\n","import React from \"react\";\n\nimport CourseGoalItem from \"../CourseGoalItem/CourseGoalItem\";\nimport \"./CourseGoalList.css\";\n\ninterface CourseGoalListProps {\n  items: {\n    text: string;\n    id: string;\n  }[];\n  onDeleteItem: (id: string) => void;\n}\n\nconst CourseGoalList: React.FC<CourseGoalListProps> = (props) => {\n  return (\n    <ul className=\"goal-list\">\n      {props.items.map((goal) => (\n        <CourseGoalItem\n          key={goal.id}\n          id={goal.id}\n          onDelete={props.onDeleteItem}\n        >\n          {goal.text}\n        </CourseGoalItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default CourseGoalList;\n","import React from \"react\";\nimport \"./Button.css\";\n\ninterface ButtonProps {\n  type: \"button\" | \"submit\" | \"reset\" | undefined;\n  onClick?: () => void;\n}\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  return (\n    <button type={props.type} className=\"button\" onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\ninterface CourseInputProps {\n  onAddGoal: (enteredValue: string) => void;\n}\n\nconst CourseInput: React.FC<CourseInputProps> = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler: React.FormEventHandler<HTMLFormElement> = (\n    event\n  ) => {\n    event.preventDefault();\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={`form-control ${isValid ? \"\" : \"invalid\"}`}>\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CourseGoalList from \"./components/CourseGoals/CourseGoalList/CourseGoalList\";\nimport CourseInput from \"./components/CourseGoals/CourseInput/CourseInput\";\n\nconst App: React.FC = () => {\n  const [courseGoals, setCourseGoals] = useState([\n    { text: \"Do all tasks assigned to me!\", id: \"g1\" },\n    { text: \"Finish the dishes!\", id: \"g2\" },\n    { text: \"Do some exercise!\", id: \"g3\" },\n  ]);\n\n  const addGoalHandler = (enteredText: string) => {\n    setCourseGoals((prevGoals) => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = (goalId: string) => {\n    setCourseGoals((prevGoals) => {\n      const updatedGoals = prevGoals.filter((goal) => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: \"center\" }}>No goals found. Maybe add one?</p>\n  );\n\n  if (courseGoals.length > 0) {\n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n        {/* {courseGoals.length > 0 && (\n          <CourseGoalList\n            items={courseGoals}\n            onDeleteItem={deleteItemHandler}\n          />\n        ) // <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n        } */}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}